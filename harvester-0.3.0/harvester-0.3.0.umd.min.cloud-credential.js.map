{"version":3,"sources":["webpack://harvester-0.3.0/./cloud-credential/harvester.vue?010f","webpack://harvester-0.3.0/cloud-credential/harvester.vue","webpack://harvester-0.3.0/./cloud-credential/harvester.vue?d72b","webpack://harvester-0.3.0/./cloud-credential/harvester.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","mode","isEdit","t","IMPORTED","on","$event","value","setData","model","decodedData","callback","$$v","$set","expression","clusterOptions","cluster","_e","isImportCluster","kubeconfigContent","staticRenderFns","components","LabeledInput","mixins","data","$emit","clusterType","clusters","computed","filter","id","label","nameDisplay","watch","handler","isCreate","methods","test","component"],"mappings":"oMAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,aAAa,CAACG,MAAM,CAAC,KAAOP,EAAIQ,KAAK,SAAWR,EAAIS,OAAO,KAAO,cAAc,OAAS,CAACT,EAAIU,EAAE,uCAAuCV,EAAIU,EAAE,0CAA0C,QAAU,CAACV,EAAIW,SAAU,aAAaC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOb,EAAIc,MAAMC,QAAQ,cAAeF,KAAWG,MAAM,CAACF,MAAOd,EAAIc,MAAMG,YAAuB,YAAEC,SAAS,SAAUC,GAAMnB,EAAIoB,KAAKpB,EAAIc,MAAMG,YAAa,cAAeE,IAAME,WAAW,oCAAoC,GAAGjB,EAAG,MAAM,CAACE,YAAY,aAAa,CAAEN,EAAmB,gBAAEI,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,gBAAgB,CAACG,MAAM,CAAC,KAAOP,EAAIQ,KAAK,SAAWR,EAAIS,OAAO,QAAUT,EAAIsB,eAAe,UAAW,EAAK,MAAQtB,EAAIU,EAAE,yCAAyCM,MAAM,CAACF,MAAOd,EAAW,QAAEkB,SAAS,SAAUC,GAAMnB,EAAIuB,QAAQJ,GAAKE,WAAW,cAAc,GAAGrB,EAAIwB,KAAKpB,EAAG,MAAM,CAACE,YAAY,cAAc,CAAGN,EAAIyB,gBAA2TzB,EAAIwB,KAA9SpB,EAAG,eAAe,CAACG,MAAM,CAAC,MAAQP,EAAIc,MAAMG,YAAYS,kBAAkB,YAAY,uDAAuD,UAAW,EAAK,KAAO,YAAY,aAAa,IAAI,KAAO1B,EAAIQ,MAAMI,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOb,EAAIc,MAAMC,QAAQ,oBAAqBF,QAAuB,QACz0Cc,EAAkB,G,yZCQtB,iBAEA,GACEC,WAAY,CACVC,aAAJ,OAAI,cAAJ,OAAI,WAAJ,QAEEC,OAAQ,CAAC,EAAX,MAEE,MANF,WAMA,6HACA,8DADA,OACA,WADA,qDAIEC,KAVF,WAWI9B,KAAK+B,MAAM,qBAAqB,GAE3B/B,KAAKa,MAAMG,YAAYgB,aAC1BhC,KAAKa,MAAMC,QAAQ,cAAeJ,GAGpC,IAAJ,uEAEI,MAAO,CACLuB,SAAU,GACVX,QAAN,EACMZ,SAAN,IAIEwB,SAAU,CACRb,eADJ,WAEM,OAAOrB,KAAKiC,SAASE,QAAO,SAAlC,gGACQ,MAAO,CACLtB,MAAOS,EAAQc,GACfC,MAAOf,EAAQgB,iBAKrBd,gBAVJ,WAWM,OAAOxB,KAAKa,MAAMG,YAAYgB,cAAgBtB,IAIlD6B,MAAO,CACL,gCAAiC,CAC/BC,QADN,SACA,GACYxC,KAAKyC,WACPzC,KAAKa,MAAMC,QAAQ,oBAAqB,IACxCd,KAAKsB,QAAU,MAKrB,QAVJ,SAUA,2HACA,EADA,wDAKA,YACA,gEAGA,0FAEA,yBAXA,SAaA,uBAbA,OAaA,EAbA,OAeA,0BAEA,uCAjBA,gDAqBEoB,QAAS,CACPC,KADJ,WAEM,IAAN,gCAEM,IAAK3C,KAAKsB,SAAWtB,KAAKwB,gBAAiB,CACzC,IAAR,4CACA,qCAEQ,MAAO,CAAf,UAGM,GAAKxB,KAAKa,MAAMG,YAAYS,kBAO1B,OAAO,EANP,IAAR,4DAEA,qCAEQ,MAAO,CAAf,aCnGma,I,YCO/ZmB,EAAY,eACd,EACA9C,EACA4B,GACA,EACA,KACA,KACA,MAIa,aAAAkB,E","file":"harvester-0.3.0.umd.min.cloud-credential.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"row mb-10\"},[_c('RadioGroup',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.isEdit,\"name\":\"clusterType\",\"labels\":[_vm.t('cluster.credential.harvester.import'),_vm.t('cluster.credential.harvester.external')],\"options\":[_vm.IMPORTED, 'external']},on:{\"input\":function($event){return _vm.value.setData('clusterType', $event);}},model:{value:(_vm.value.decodedData.clusterType),callback:function ($$v) {_vm.$set(_vm.value.decodedData, \"clusterType\", $$v)},expression:\"value.decodedData.clusterType\"}})],1),_c('div',{staticClass:\"row mb-10\"},[(_vm.isImportCluster)?_c('div',{staticClass:\"col span-6\"},[_c('LabeledSelect',{attrs:{\"mode\":_vm.mode,\"disabled\":_vm.isEdit,\"options\":_vm.clusterOptions,\"required\":true,\"label\":_vm.t('cluster.credential.harvester.cluster')},model:{value:(_vm.cluster),callback:function ($$v) {_vm.cluster=$$v},expression:\"cluster\"}})],1):_vm._e(),_c('div',{staticClass:\"col span-6\"},[(!_vm.isImportCluster)?_c('LabeledInput',{attrs:{\"value\":_vm.value.decodedData.kubeconfigContent,\"label-key\":\"cluster.credential.harvester.kubeconfigContent.label\",\"required\":true,\"type\":\"multiline\",\"min-height\":160,\"mode\":_vm.mode},on:{\"input\":function($event){return _vm.value.setData('kubeconfigContent', $event);}}}):_vm._e()],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { RadioGroup } from '@components/Form/Radio';\n\nimport { get, set } from '@shell/utils/object';\nimport { MANAGEMENT, VIRTUAL_HARVESTER_PROVIDER } from '@shell/config/types';\n\nconst IMPORTED = 'imported';\n\nexport default {\n  components: {\n    LabeledInput, LabeledSelect, RadioGroup\n  },\n  mixins: [CreateEditView],\n\n  async fetch() {\n    this.clusters = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.CLUSTER });\n  },\n\n  data() {\n    this.$emit('validationChanged', true);\n\n    if (!this.value.decodedData.clusterType) {\n      this.value.setData('clusterType', IMPORTED);\n    }\n\n    const cluster = get(this.value, 'harvestercredentialConfig.clusterId') || '';\n\n    return {\n      clusters: [],\n      cluster,\n      IMPORTED,\n    };\n  },\n\n  computed: {\n    clusterOptions() {\n      return this.clusters.filter(c => c.status?.provider === VIRTUAL_HARVESTER_PROVIDER).map( (cluster) => {\n        return {\n          value: cluster.id,\n          label: cluster.nameDisplay\n        };\n      });\n    },\n\n    isImportCluster() {\n      return this.value.decodedData.clusterType === IMPORTED;\n    }\n  },\n\n  watch: {\n    'value.decodedData.clusterType': {\n      handler(neu) {\n        if (this.isCreate) {\n          this.value.setData('kubeconfigContent', '');\n          this.cluster = '';\n        }\n      },\n    },\n\n    async cluster(neu) {\n      if (!neu) {\n        return;\n      }\n\n      if (this.isCreate) {\n        set(this.value, 'harvestercredentialConfig.clusterId', neu);\n      }\n\n      const currentCluster = this.$store.getters['management/all'](MANAGEMENT.CLUSTER).find(x => x.id === neu);\n\n      this.$nuxt.$loading.start();\n\n      const kubeconfigContent = await currentCluster.generateKubeConfig();\n\n      this.$nuxt.$loading.finish();\n\n      this.value.setData('kubeconfigContent', kubeconfigContent);\n    }\n  },\n\n  methods: {\n    test() {\n      const t = this.$store.getters['i18n/t'];\n\n      if (!this.cluster && this.isImportCluster) {\n        const cluster = t('cluster.credential.harvester.cluster');\n        const errors = [t('validation.required', { key: cluster })];\n\n        return { errors };\n      }\n\n      if (!this.value.decodedData.kubeconfigContent) {\n        const kubeconfigContent = t('cluster.credential.harvester.kubeconfigContent.label');\n\n        const errors = [t('validation.required', { key: kubeconfigContent })];\n\n        return { errors };\n      } else {\n        return true;\n      }\n    },\n  }\n};\n</script>\n\n<template>\n  <div>\n    <div class=\"row mb-10\">\n      <RadioGroup\n        v-model=\"value.decodedData.clusterType\"\n        :mode=\"mode\"\n        :disabled=\"isEdit\"\n        name=\"clusterType\"\n        :labels=\"[t('cluster.credential.harvester.import'),t('cluster.credential.harvester.external')]\"\n        :options=\"[IMPORTED, 'external']\"\n        @input=\"value.setData('clusterType', $event);\"\n      />\n    </div>\n\n    <div class=\"row mb-10\">\n      <div v-if=\"isImportCluster\" class=\"col span-6\">\n        <LabeledSelect\n          v-model=\"cluster\"\n          :mode=\"mode\"\n          :disabled=\"isEdit\"\n          :options=\"clusterOptions\"\n          :required=\"true\"\n          :label=\"t('cluster.credential.harvester.cluster')\"\n        />\n      </div>\n\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-if=\"!isImportCluster\"\n          :value=\"value.decodedData.kubeconfigContent\"\n          label-key=\"cluster.credential.harvester.kubeconfigContent.label\"\n          :required=\"true\"\n          type=\"multiline\"\n          :min-height=\"160\"\n          :mode=\"mode\"\n          @input=\"value.setData('kubeconfigContent', $event);\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./harvester.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./harvester.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./harvester.vue?vue&type=template&id=70577203&\"\nimport script from \"./harvester.vue?vue&type=script&lang=js&\"\nexport * from \"./harvester.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}